#!/usr/bin/env bash
# videogo - start an x server and play a video
#
# some help from https://github.com/Earnestly/sx/blob/master/sx

VLC=$(command -v cvlc)
REAL_VLC=$(command -v vlc)
XSET=$(command -v xset)

if [ -z "${VLC_SOURCE_URL}" ]; then
    echo "Source URL not defined (VLC_SOURCE_URL)"
    exit 1
fi

if [ -z "${VLC_BITRATE}" ]; then
    VLC_BITRATE=1024
fi

if [ -z "${VLC_CACHE}" ]; then
    VLC_CACHE=1024
fi

if [ -z "${VLC_THREADS}" ]; then
    VLC_THREADS=$(nproc --all)
fi

if [ -z "${VLC_ASPECT_RATIO}" ]; then
    VLC_ASPECT_RATIO=16:9
fi

if [ -z "${VLC_ADAPTIVE_WIDTH}" ]; then
    VLC_ADAPTIVE_WIDTH=1280
fi

if [ -z "${VLC_ADAPTIVE_HEIGHT}" ]; then
    VLC_ADAPTIVE_HEIGHT=720
fi

if [ -z "${VLC_ADAPTIVE_BITRATE}" ]; then
    VLC_ADAPTIVE_BITRATE=2048
fi

if [ -z "${VLC_ADAPTIVE_LOGIC}" ]; then
    VLC_ADAPTIVE_LOGIC=highest
fi

if [ -z "${VLC_VERBOSE}" ]; then
    VLC_VERBOSE=0
fi

if [ -z "${VLC_ZOOM}" ]; then
    VLC_ZOOM=1
fi

if [ -z "${VLC_AVCODEC_OPTIONS}" ]; then
    # VLC_AVCODEC_OPTIONS="--avcodec-dr --avcodec-corrupted --avcodec-hurry-up --avcodec-skip-frame=1 --avcodec-skip-idct=1 --avcodec-fast --avcodec-threads=${VLC_THREADS} --sout-avcodec-strict=-2"
    VLC_AVCODEC_OPTIONS=""
fi

# Allow VLC to run as root
# shellcheck disable=SC2086
sed -i 's/geteuid/getppid/' ${REAL_VLC}

# Set the DBUS address for sending around system messages
if [ -f "/host/run/dbus/system_bus_socket" ]; then
    export DBUS_SYSTEM_BUS_ADDRESS=unix:path=/host/run/dbus/system_bus_socket
fi

SHUTTING_DOWN=false
cleanup() {
    SHUTTING_DOWN=true
    if [ "$vlcpid" ] && kill -0 "$vlcpid" 2>/dev/null; then
        kill "$vlcpid"
        wait "$vlcpid"
    fi

    if [ "$xpid" ] && kill -0 "$xpid" 2>/dev/null; then
        kill "$xpid"
        wait "$xpid"
        xorg=$?
    fi

    if ! stty "$stty"; then
        stty sane
    fi

    xauth remove :"$tty"

    if [ "$1" = exit ]; then
        exit "${xorg:-0}"
    fi
}

stty=$(stty -g)
# tty=$(tty)
# tty=${tty#/dev/tty}
tty=0

cfgdir=${XDG_CONFIG_HOME:-$HOME/.config}/sx
datadir=${XDG_DATA_HOME:-$HOME/.local/share}/sx
mkdir -p -- "$cfgdir" "$datadir"

export XAUTHORITY="${XAUTHORITY:-$datadir/xauthority}"
touch -- "$XAUTHORITY"

xauth add :"$tty" MIT-MAGIC-COOKIE-1 "$(od -An -N16 -tx /dev/urandom | tr -d ' ')"

trap 'cleanup; trap - INT; kill -INT "$$"' INT
trap 'cleanup exit' EXIT HUP TERM QUIT

# Xorg will check whether it inherited a USR1 with a disposition of SIG_IGN and
# use this state to reply back to the parent process with its own USR1.
# This is done to indicate that the server is ready to accept connections.
# Taking advantage of this feature allows launching the client directly from a
# USR1 signal trap which obviates the need to poll for server readiness.
trap 'DISPLAY=:$tty exec "${@:-$cfgdir/sxrc}" & wait "$!"' USR1

(trap '' USR1 && exec Xorg :"$tty" -keeptty vt"$tty" -noreset -auth "$XAUTHORITY") &
xpid=$!
wait "$xpid"
${XSET} s off
${XSET} -dpms
${XSET} s noblank

# Hide the cursor
unclutter -display :"$tty" -idle 0.1 &

# Start the VLC media player
VLC_COMMAND="${VLC} --verbose=${VLC_VERBOSE} --x11-display :$tty ${VLC_AVCODEC_OPTIONS} --zoom ${VLC_ZOOM} --no-repeat --no-loop --network-caching=${VLC_CACHE} --drop-late-frames --skip-frames --adaptive-logic=${VLC_ADAPTIVE_LOGIC} --adaptive-maxwidth=${VLC_ADAPTIVE_WIDTH} --adaptive-maxheight=${VLC_ADAPTIVE_HEIGHT} --adaptive-bw=${VLC_ADAPTIVE_BITRATE} --no-play-and-pause --play-and-exit --no-disable-screensaver ${VLC_SOURCE_URL} vlc://quit"
while :; do
    echo "ðŸ“º Starting VLC"
    echo "ðŸ–¥ ${VLC_COMMAND}"
    # shellcheck disable=SC2086
    nice -n -20 ${VLC_COMMAND} &
    vlcpid=$!
    echo "ðŸ†” VLC Running as PID ${vlcpid}"
    wait "$vlcpid"
    echo "ðŸ‘‹ VLC Stream Finished"
    if [ "$SHUTTING_DOWN" = true ]; then
        break
    fi
done
